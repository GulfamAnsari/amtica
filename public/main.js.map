{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.rounting.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/login/login.service.ts","webpack:///./src/app/sign-up/sign-up.component.css","webpack:///./src/app/sign-up/sign-up.component.html","webpack:///./src/app/sign-up/sign-up.component.ts","webpack:///./src/app/sign-up/sign-up.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<router-outlet>\\n</router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app.rounting';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { LoginService } from './login/login.service';\nimport { SignupService } from './sign-up/sign-up.service';\nimport { SignUpComponent } from './sign-up/sign-up.component';\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    DashboardComponent,\n    SignUpComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    ReactiveFormsModule\n  ],\n  providers: [LoginService, SignupService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { SignUpComponent } from './sign-up/sign-up.component';\nexport const appRoutes: Routes = [\n    { path: '', component: LoginComponent },\n    { path: 'login', component: LoginComponent },\n    { path: 'dashboard', component: DashboardComponent },\n    { path: 'signup', component: SignUpComponent }\n]\n\n@NgModule({\n    imports: [RouterModule.forRoot(appRoutes, { useHash: false })],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}","module.exports = \"*{\\n  margin: 0;\\n  padding: 0;\\n}\\n.intro{\\n  margin: auto;\\n}\\n.black {\\n  width: 50%;\\n  float: left;\\n  background: #283644;\\n  height: 100vh;\\n}\\n.white{\\n  width: 50%;\\n  float: right;\\n  background: #4D727E;\\n  height: 100vh;\\n}\\n.box{\\n  height: 300px;\\n  width: 500px;\\n  background: #069A8E;\\n  position:absolute;\\n  top:150px;\\n  left:0;\\n  right:0;\\n  margin:auto;\\n  border-radius:20px;\\n}\\n.boxfather{\\n  width:100%;\\n  position:absolute;\\n}\\n.box h1{\\n  color: #E4E4E4;\\n  font-size: 5em;\\n  text-align: center;\\n  position: relative;\\n  top:70px;\\n  font-family: 'Montserrat', sans-serif;\\n}\\n.box button{\\n  left:43%;\\n  position:relative;\\n  top:120px;\\n  padding: 8px 20px;\\n  cursor:pointer;\\n  border:0;\\n  outline:none;\\n  color:#525252;\\n  background:#E4E4E4;\\n  transition:all .3s ease;\\n  font-size: 19px;\\n  font-family: montserrat;\\n  border-radius:5px;\\n}\\n.homepage{\\n  height: 100vh;\\n  position:relative;\\n  top:40px;\\n  \\n \\n}\\n.homepage p{\\n  width: 80%;\\n  line-height: 1.5;\\n  margin:50px auto;\\n  font-family: oxygen;\\n  font-size: 18px;\\n  color: #585858;\\n}\\n.homepage h1{\\n  padding-top: 50px;\\n  width: 80%;\\n  margin:auto;\\n  font-family: montserrat;\\n  color: #525252;\\n  font-size: 40px;\\n}\\n.test-box {\\n  padding: 16px;\\n  color: white;\\n  font-size: 16px;\\n}\\n.text-area {\\n  margin: 16px 0;\\n}\\nbutton {\\n  padding: 8px 16px;\\n}\\ninput[type=\\\"text\\\"] {\\n  color: black;\\n  width: 70%;\\n  padding: 8px;\\n}\\ntextarea {\\n  color: black;\\n  width: 70%;\\n  padding: 8px;\\n  height: 20vh;\\n}\\n.selected-paper {\\n  cursor: pointer;\\n}\\n.selected-paper:hover {\\n  color: yellowgreen;\\n}\"","module.exports = \"<!-- <div class=\\\"intro\\\">\\n    <div class=\\\"black\\\"></div>\\n    <div class=\\\"boxfather\\\">\\n        <div class=\\\"box\\\">\\n            <h1>WELCOME</h1>\\n            <button (click)=\\\"logout()\\\">Logout</button>\\n        </div>\\n    </div>\\n</div> -->\\n<div class=\\\"container-fluid\\\" style=\\\"background: #4D727E;\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6 test-box\\\">\\n            <h2>Create Test Paper</h2>\\n            <br>\\n            <p>This dashboard is for teachers to create the test papers.</p>\\n            <br>\\n            <form>\\n                <button (click)=\\\"addTest()\\\" class=\\\"btn btn-primary\\\">Add Test paper</button>\\n                <button (click)=\\\"showAllPapers()\\\" style=\\\"float: right\\\" class=\\\"btn btn-primary\\\">Show all papers</button>\\n                <br>\\n                <div *ngIf=\\\"!showPapers\\\">\\n                    <div class=\\\"col-md-12 text-area\\\" *ngIf=\\\"test\\\">\\n                        <ng-container *ngIf=\\\"questions.length === 0\\\">\\n                            <input style=\\\"color:black\\\" name=\\\"name\\\" type=\\\"text\\\"\\n                                placeholder=\\\"Enter name of question paper\\\" [(ngModel)]=\\\"test.name\\\">\\n                        </ng-container>\\n\\n                        <br>\\n                        <br>\\n                        <textarea [(ngModel)]=\\\"test.question\\\" name=\\\"question\\\" placeholder=\\\"Enter your question here\\\"\\n                            style=\\\"color: black\\\"></textarea>\\n                        <div *ngIf=\\\"test\\\">\\n                            <br>\\n                            <p>Is your question having multiple answers?</p>\\n                            <label style=\\\"margin: 4px 16px 0 0\\\">\\n                                <input type=\\\"radio\\\" name=\\\"radioGroup\\\" [checked]=\\\"!test.singleCorrect\\\"\\n                                    (click)=\\\"multiple('yes')\\\">\\n                                yes\\n                            </label>\\n                            <label>\\n                                <input type=\\\"radio\\\" name=\\\"radioGroup\\\" #radio [checked]=\\\"test.singleCorrect\\\"\\n                                    (click)=\\\"multiple('no')\\\"> no\\n                            </label>\\n                            <br>\\n                            <br>\\n                            <button (click)=\\\"addOptions()\\\" class=\\\"btn btn-primary\\\">Add options</button>\\n                            <br>\\n                            <label style=\\\"padding: 16px 0;\\\" *ngFor=\\\"let option of test.options; let i = index\\\">\\n                                Answer {{i}}: <input [name]=\\\"i\\\" [ngModelOptions]=\\\"{standalone: true}\\\" type=\\\"text\\\"\\n                                    style=\\\"color:black\\\" [(ngModel)]=\\\"test.options[i]['text']\\\">\\n                                <br>\\n                            </label>\\n                            <br>\\n                            <br>\\n                            <p>Your Answer: </p>\\n                            <div *ngIf=\\\"test.singleCorrect\\\">\\n                                <label style=\\\"margin: 4px 16px 0 0\\\" *ngFor=\\\"let option of test.options; let i = index\\\">\\n                                    <input type=\\\"radio\\\" id=\\\"{{i}}\\\" name=\\\"radioGroup2\\\" (click)=\\\"answers(option, i)\\\">\\n                                    {{i}}\\n                                    <br>\\n                                </label>\\n                            </div>\\n                            <div *ngIf=\\\"!test.singleCorrect\\\">\\n                                <label style=\\\"margin: 4px 16px 0 0\\\" *ngFor=\\\"let option of test.options; let i = index\\\">\\n                                    <input type=\\\"checkbox\\\" id=\\\"checkbox{{i}}\\\" name=\\\"checkbox\\\"\\n                                        (click)=\\\"answers(option, i)\\\"> {{i}}\\n                                    <br>\\n                                </label>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <button type=\\\"submit\\\" (click)=\\\"submit()\\\" class=\\\"btn btn-primary\\\" *ngIf=\\\"test\\\">Add\\n                        Question</button>\\n                    <button type=\\\"submit\\\" style=\\\"float: right\\\" (click)=\\\"submitTest()\\\" class=\\\"btn btn-primary\\\"\\n                        *ngIf=\\\"questions.length\\\">Submit test</button>\\n                    <br>\\n                    <p *ngIf=\\\"loader.status\\\">{{loader.message}}</p>\\n                </div>\\n\\n                <!-- show all papers -->\\n                <div *ngIf=\\\"showPapers\\\">\\n                    <ng-container>\\n                        <br>\\n                        <p *ngIf=\\\"allTests.length === 0\\\">There is no test paper yet</p>\\n                        <p *ngIf=\\\"allTests.length > 0\\\">Click the test paper to more details</p>\\n                        <ol style=\\\"padding: 16px\\\">\\n                            <li class=\\\"selected-paper\\\" *ngFor=\\\"let test of allTests; let i=index\\\"\\n                                (click)=\\\"selectedPaper(i)\\\">{{test[0].name}}</li>\\n                        </ol>\\n                    </ng-container>\\n                </div>\\n            </form>\\n        </div>\\n        <div class=\\\"col-md-6 test-box\\\">\\n            <div *ngFor=\\\"let question of questions; let i = index\\\">\\n                <div *ngIf=\\\"i===0\\\">\\n                    <h2>Your question in {{question.name}}</h2>\\n                </div>\\n                <br>\\n                <p>Question {{i}}: {{question.question}}</p>\\n                <ol style=\\\"margin: 0 20px;\\\">\\n                    <li *ngFor=\\\"let option of question.options\\\">{{option.text}}</li>\\n                </ol>\\n                <br>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\n\nexport class DashboardComponent {\n\n  public allTests = [];\n  public test;\n  public questions = [];\n  public showPapers = false;\n  public url = '';\n  public loader = {\n    status: false,\n    message: ''\n  };\n\n  constructor(private router: Router, private http: HttpClient) {\n    if (window.location.hostname === 'localhost') {\n      this.url = 'http://localhost:4100/test-paper';\n    } else {\n      this.url = '/test-paper';\n    }\n  }\n\n  public logout() {\n    sessionStorage.clear();\n    this.router.navigate(['/login']);\n  }\n\n  public reset() {\n    this.test = {\n      question: '',\n      name: '',\n      singleCorrect: true,\n      options: [],\n      answers: []\n    };\n  }\n\n  public addTest() {\n    this.questions = [];\n    this.showPapers = false;\n    this.reset();\n  }\n\n  public multiple(value) {\n    this.test.answers = [];\n    if (value === 'yes') {\n      this.test.singleCorrect = false;\n    } else {\n      this.test.singleCorrect = true;\n    }\n  }\n\n  public addOptions() {\n    this.test['options'][this.test['options'].length] = {\n      number: this.test['options'].length,\n      text: ''\n    };\n  }\n\n  public answers(event, index) {\n    if (this.test.singleCorrect) {\n      this.test.answers[0] = index;\n    } else {\n      const ele = document.getElementById('checkbox' + index);\n      if (ele['checked']) {\n        this.test.answers.push(index);\n      } else {\n        this.test.answers.splice(this.test.answers.indexOf(index), 1);\n      }\n\n    }\n  }\n\n  public submit() {\n    this.questions.push(this.test);\n    this.reset();\n  }\n\n  public submitTest() {\n    this.allTests.push(this.questions);\n    this.loader.status = true;\n    this.loader.message = 'Saving... Please wait.';\n    this.http.post(this.url, this.allTests, { headers: { 'Content-Type': 'application/json' } })\n      .subscribe((data) => {\n        this.questions = [];\n        this.reset();\n        this.loader.status = true;\n        this.loader.message = 'You have succesfully added your paper';\n        console.log(this.allTests);\n      }, (err) => {\n        this.loader.status = true;\n        this.loader.message = 'Error while adding your paper';\n      });\n  }\n\n  public showAllPapers() {\n    this.showPapers = true;\n  }\n\n  public selectedPaper(i) {\n    this.questions = this.allTests[i];\n  }\n}\n","module.exports = \".login-page {\\n  width: 360px;\\n  padding: 8% 0 0;\\n  margin: auto;\\n}\\n.form {\\n  position: relative;\\n  z-index: 1;\\n  background: #ffffff;\\n  max-width: 360px;\\n  margin: 0 auto 100px;\\n  padding: 45px;\\n  text-align: center;\\n  box-shadow: 0 0 20px 0 rgba(0, 0, 0, 0.2), 0 5px 5px 0 rgba(0, 0, 0, 0.24);\\n}\\n.form input {\\n  font-family: \\\"Roboto\\\", sans-serif;\\n  outline: 0;\\n  background: #f2f2f2;\\n  width: 100%;\\n  border: 0;\\n  margin: 0 0 15px;\\n  padding: 15px;\\n  box-sizing: border-box;\\n  font-size: 14px;\\n}\\n.form button {\\n  font-family: \\\"Roboto\\\", sans-serif;\\n  text-transform: uppercase;\\n  outline: 0;\\n  background: #4caf50;\\n  width: 100%;\\n  border: 0;\\n  padding: 15px;\\n  color: #ffffff;\\n  font-size: 14px;\\n  transition: all 0.3 ease;\\n  cursor: pointer;\\n}\\n.form button:hover,\\n.form button:active,\\n.form button:focus {\\n  background: #43a047;\\n}\\n.form .message {\\n  margin: 15px 0 0;\\n  color: #b3b3b3;\\n  font-size: 12px;\\n}\\n.form .message a {\\n  color: #4caf50;\\n  text-decoration: none;\\n}\\n.form .register-form {\\n  display: none;\\n}\\n.container {\\n  position: relative;\\n  z-index: 1;\\n  max-width: 300px;\\n  margin: 0 auto;\\n}\\n.container:before,\\n.container:after {\\n  content: \\\"\\\";\\n  display: block;\\n  clear: both;\\n}\\n.container .info {\\n  margin: 50px auto;\\n  text-align: center;\\n}\\n.container .info h1 {\\n  margin: 0 0 15px;\\n  padding: 0;\\n  font-size: 36px;\\n  font-weight: 300;\\n  color: #1a1a1a;\\n}\\n.container .info span {\\n  color: #4d4d4d;\\n  font-size: 12px;\\n}\\n.container .info span a {\\n  color: #000000;\\n  text-decoration: none;\\n}\\n.container .info span .fa {\\n  color: #ef3b3a;\\n}\\n.login {\\n    height: 100vh;\\n  background: #76b852 !important; /* fallback for old browsers */\\n  background: linear-gradient(to left, #76b852, #8dc26f);\\n  font-family: \\\"Roboto\\\", sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n}\\n\"","module.exports = \"<div class=\\\"login\\\">\\n    <div class=\\\"login-page\\\">\\n        <div class=\\\"form\\\">\\n          <form class=\\\"login-form\\\">\\n            <h3>Login <p [hidden]=\\\"!errorMessage\\\">{{errorMessage}}</p></h3>\\n            <input type=\\\"email\\\" name=\\\"email\\\"placeholder=\\\"Your email\\\" [(ngModel)]=\\\"email\\\">\\n            <input type=\\\"password\\\" name=\\\"password\\\"placeholder=\\\"Password\\\" [(ngModel)]=\\\"password\\\">\\n            <button (click)=\\\"login()\\\">login</button>\\n            <p class=\\\"message\\\">Not registered? <a (click)=\\\"signup()\\\" >Create an account</a></p>\\n          </form>\\n        </div>\\n      </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { Router } from '@angular/router';\nimport { LoginService } from './login.service';\nimport { User } from './user';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  public email = '';\n  public password = '';\n  public errorMessage = '';\n  user: User;\n  constructor(\n    private titleService: Title,\n    private router: Router,\n    private loginService: LoginService\n  ) { }\n\n  ngOnInit() {\n    this.titleService.setTitle('This is login page');\n    const user = sessionStorage.getItem('user');\n    if (sessionStorage.getItem('user')) {\n      this.user = JSON.parse(user);\n      this.loginSuccessful(JSON.parse(user));\n      this.router.navigate(['/dashboard']);\n    }\n  }\n\n  public login() {\n    this.loginService.login({\n      email: this.email,\n      password: this.password\n    })\n      .subscribe(\n        res => {\n          if (res) {\n            this.user = res;\n            this.loginSuccessful(res);\n          } else {\n            this.errorMessage = 'Please check your email or password';\n          }\n        }\n      );\n  }\n\n  private loginSuccessful(user) {\n    this.setUserDetails(user);\n    this.router.navigate(['/dashboard']);\n  }\n\n  private setUserDetails(user) {\n    sessionStorage.setItem('user', JSON.stringify(user));\n  }\n\n  public signup() {\n    this.router.navigate(['/signup']);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { User } from './user';\nimport { map } from 'rxjs/operators';\n@Injectable()\nexport class LoginService {\n    public url;\n    constructor(private http: HttpClient\n    ) {\n        if (window.location.hostname === 'localhost') {\n            this.url = 'http://localhost:4100/login';\n        } else {\n            this.url = '/login';\n        }\n    }\n\n    public login(member: any): any {\n        return this.http\n            .post(this.url, member, { headers: { 'Content-Type': 'application/json' } });\n    }\n\n}\n","module.exports = \"body {\\n    background: #384047;\\n    font-family: sans-serif;\\n    font-size: 10px;\\n  }\\n  .post {\\n    height: 100vh;\\n    background: #76b852 !important; /* fallback for old browsers */\\n    background: linear-gradient(to left, #76b852, #8dc26f);\\n    font-family: \\\"Roboto\\\", sans-serif;\\n    -webkit-font-smoothing: antialiased;\\n    -moz-osx-font-smoothing: grayscale;\\n  }\\n  form {\\n    background: #fff;\\n    padding: 2em 2em 2em;\\n    max-width: 400px;\\n    margin: auto;\\n    box-shadow: 0 0 1em #222;\\n    border-radius: 2px;\\n  }\\n  form h2 {\\n    margin: 0 0 50px 0;\\n    padding: 10px;\\n    text-align: center;\\n    font-size: 30px;\\n    color: #666666;\\n    border-bottom: solid 1px #e5e5e5;\\n  }\\n  form p {\\n    position: relative;\\n  }\\n  form input {\\n    display: block;\\n    box-sizing: border-box;\\n    width: 100%;\\n    outline: none;\\n    margin: 0;\\n  }\\n  form input[type=\\\"text\\\"],\\n  form input[type=\\\"password\\\"] {\\n    background: #fff;\\n    border: 1px solid #dbdbdb;\\n    font-size: 1.6em;\\n    padding: 0.2em 0.5em;\\n    border-radius: 2px;\\n  }\\n  form input[type=\\\"text\\\"]:focus,\\n  form input[type=\\\"password\\\"]:focus {\\n    background: #fff;\\n  }\\n  form span {\\n    display: block;\\n    background: #f9a5a5;\\n    padding: 2px 5px;\\n    color: #666;\\n  }\\n  form input[type=\\\"submit\\\"] {\\n    background: rgba(148, 186, 101, 0.7);\\n    box-shadow: 0 3px 0 0 rgba(123, 163, 73, 0.7);\\n    border-radius: 2px;\\n    border: none;\\n    color: #fff;\\n    cursor: pointer;\\n    display: block;\\n    font-size: 1.4em;\\n    line-height: 1.6em;\\n    margin: 2em 0 0;\\n    outline: none;\\n    padding: 0.1em 0;\\n    text-shadow: 0 1px #68b25b;\\n  }\\n  form input[type=\\\"submit\\\"]:hover {\\n    background: #94af65;\\n    text-shadow: 0 1px 3px rgba(70, 93, 41, 0.7);\\n  }\\n  form label {\\n    position: absolute;\\n    left: 8px;\\n    top: 12px;\\n    color: #999;\\n    font-size: 16px;\\n    display: inline-block;\\n    padding: 4px 10px;\\n    font-weight: 400;\\n    background-color: rgba(255, 255, 255, 0);\\n    transition: color 0.3s, top 0.3s, background-color 0.8s;\\n  }\\n  form label.floatLabel {\\n    top: -11px;\\n    background-color: rgba(255, 255, 255, 0.8);\\n    font-size: 14px;\\n  }\\n  .login {\\n    background: #94af65;\\n    padding: 13px 0px 13px 0px;\\n    width: 100%;\\n    display: inline-block;\\n    color: white;\\n    margin: 0px !important;\\n    text-decoration: none\\n  }\"","module.exports = \"<div class=\\\"post\\\">\\n<form action=\\\"#\\\" method=\\\"post\\\">\\n    <h2>Sign Up</h2>\\n    <p>{{errorMessage}}</p>\\n      <p>\\n        <label for=\\\"password\\\" class=\\\"floatLabel\\\">Name</label>\\n        <input id=\\\"Email\\\" name=\\\"username\\\"  type=\\\"text\\\" [(ngModel)]=\\\"username\\\" (ngModelChange)=\\\"change($event)\\\">\\n      </p>\\n      \\n      <p>\\n        <label for=\\\"Email\\\" class=\\\"floatLabel\\\">Email</label>\\n        <input id=\\\"Email\\\" name=\\\"Email\\\" type=\\\"text\\\"  [(ngModel)]=\\\"email\\\" (ngModelChange)=\\\"change($event)\\\">\\n      </p>\\n      <p>\\n        <label for=\\\"password\\\" class=\\\"floatLabel\\\">Password</label>\\n        <input id=\\\"password\\\" name=\\\"password\\\"  type=\\\"password\\\" [(ngModel)]=\\\"password\\\" (ngModelChange)=\\\"change($event)\\\">\\n      </p>\\n      <p>\\n        <input type=\\\"submit\\\" name=\\\"submit\\\"value=\\\"Create My Account\\\" id=\\\"submit\\\" (click)=\\\"register()\\\">\\n      </p>\\n      <p style=\\\"text-align: center\\\"><a  class=\\\"login\\\" (click)=\\\"login()\\\">Login</a></p>\\n</form>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { SignupService } from './sign-up.service';\nimport { Title } from '@angular/platform-browser';\nimport { Router, ActivatedRoute } from '@angular/router';\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.css']\n})\nexport class SignUpComponent implements OnInit {\n\n  constructor(\n    private signUpService: SignupService,\n    private router: Router,\n    private titleService: Title\n  ) {\n  }\n  public username = '';\n  public email = '';\n  public password = '';\n  public userType = 'admin';\n  public errorMessage = '';\n  public regView: boolean[] = [true, false, false, false];\n\n  ngOnInit() {\n    this.titleService.setTitle('Sign Up')\n  }\n\n  register() {\n    if (!this.checkName()) return;\n    this.signUpService.register({\n      email: this.email,\n      username: this.username,\n      password: this.password,\n      usertype: this.userType\n    })\n      .subscribe(\n        result => {\n          if (result) {\n            this.errorMessage = 'Thanks your for sign up ';\n            this.regView = [false, true, false, false];\n          } else {\n            this.errorMessage = 'User already exists';\n          }\n        }\n      );\n  }\n\n\n\n  private checkName() {\n    if (this.username.length < 3 || this.username.length > 20) {\n      this.errorMessage = 'Names should be greater than 3 and less than 20 words'\n      return false;\n    }\n    if (this.password.length < 6 || this.password.length > 20) {\n      this.errorMessage = 'Password should be greater than 6 and less than 20 words'\n      return false;\n    }\n    if (!/^[0-9a-zA-Z]+@(([0-9a-zA-Z]+)[.])+[a-z]{2,4}$/.test(this.email)) {\n      this.errorMessage = 'Invalid email'\n      return false;\n    }\n    return true;\n  }\n\n  change(event) {\n    this.errorMessage = '';\n  }\n\n  public login() {\n    this.router.navigate(['/login']);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User } from '../login/user';\n\n@Injectable()\nexport class SignupService {\n    public url = '';\n    constructor(private http: HttpClient, ) {\n        if (window.location.hostname === 'localhost') {\n            this.url = 'http://localhost:4100/signup';\n        } else {\n            this.url = '/signup';\n        }\n    }\n\n    register(member: any): Observable<any> {\n        return this.http.post(this.url, member, { headers: { 'Content-Type': 'application/json' } });\n    }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}